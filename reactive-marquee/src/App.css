/*

  Section: Container Styles
  Purpose: To style the container and add the background images

*/

.container {
  background-color: rgb(177, 202, 183);
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

.slide_one {
  background-image: url(./background-images/slide_one.webp);
  background-size: cover;
}
.slide_two {
  background-image: url(./background-images/slide_two.webp);
  background-size: cover;
}
.slide_three {
  background-image: url(./background-images/slide_three.webp);
  background-size: cover;
}

/*

  Section: Layout Styles
  Purpose: To style the Layout component and navigation links that are contained within the component

*/

.layout {
  max-width: calc(1440px - 16%);
  height: 16vh;
  margin: 2vh 8%;
}

.navlinks {
  display: flex;
  flex-direction: column;
  margin-top: .8em;
  animation: slidein-left .5s ease-out;
}

.navlinks > a {
  width: 10%;
 white-space: nowrap;
}

.link__menu {
  color: #fff;
  text-decoration: none;
  font-family: Helvetica, sans-serif;
  font-weight: bold;
  line-height: 1.86;
  font-size: 1.2rem;
}

.link--active {
  color: #ffc004;
}

.link--unactive {
  color: #fff;
}

.link__contact {
  float: right;
  padding: 0.5em 1.75em;
  border: solid 1px;
  opacity: 0;
  animation: slidein-right .5s ease-out .3s forwards;
}

/*

  Section: Marquee Styles
  Purpose: To style the Marquee component and headings that are contained within the component

*/

.marquee {
  max-width: calc(1440px - 16%);
  height: 76vh;
  margin: 2vh 8%;
  margin-bottom: 0;
  display: grid;
  grid-template-areas: "headline subhead"
                       "cta cta";
  grid-template-rows: minmax(auto, auto) 20vh;
  grid-template-columns: 2fr 1fr;
  column-gap: 3rem;
  flex: 1 1;
}

.headline {
  grid-area: headline;
  align-self: center;
  color: #fff;
  font-family: Helvetica, sans-serif;
  font-size: 5.25rem;
  line-height: 5.25rem;
  letter-spacing: -2.2px;
  animation: slidein-left .5s ease-out;
}

.subhead {
  grid-area: subhead;
  align-self: center;
  color: #fff;
  font-size: 0.9rem;
  line-height: 1.625rem;
  font-weight: normal;
  opacity: 0;
  animation: slidein-right .5s ease-out .3s forwards;
}

/*

  Section: Call to Action (CTA) Box Styles
  Purpose: To style the Call to Action (CTA) Box component and text and link contained within the component

*/

.cta {
  opacity: 0;
  background-color: #fff;
  color: #000;
  grid-area: cta;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items: center;
  animation: flip .5s ease-out .7s forwards;
}

.cta__text {
  position: relative;
  margin: 0 3vw;
  font-size: 1.5rem;
  font-weight: bold;
  letter-spacing: -0.63px;
}

.link__talk {
  text-decoration: none;
  color: #000;
  font-family: Helvetica, sans-serif;
  font-size: 0.87rem;
  font-weight: 600;
  letter-spacing: 1px;
  text-transform: uppercase;
  margin: 0 3vw;
}

.link__talk--icon {
  color: #ffc004;
  position: relative;
  font-size: 1.8rem;
  top: 1.1vh;
  left: .8vw;
}

/*

  Section: Media Query
  Purpose: To make the page responsive for narrower viewports

*/

@media only screen and (max-width: 720px) {
  .container {
    padding-left: 0;
    padding-right: 0;
  }

  .marquee {
    grid-template-areas: "headline"
                         "subhead"
                         "cta"
                         "cta";
    grid-template-rows: minmax(auto,auto) minmax(20vh,auto) 10vh 10vh;
    grid-template-columns: auto;
  }

  .headline {
    align-self: end;
  }

  .subhead {
    align-self: start;
  }
  
  .cta {
    flex-direction: column;
    justify-content: space-evenly;
  }

  .link__talk {
    align-self: start;
  }
}

/*

  Section: Animations
  Purpose: To give the elements animations on page render

*/

@keyframes slidein-left {
  from {
    opacity: 0;
    transform: translateX(-15%);
  }

  to {
    transform: translateX(0%);
    opacity: 1;
  }
}

@keyframes slidein-right {
  from {
    opacity: 0;
    transform: translateX(15%);
  }

  to {
    transform: translateX(0%);
    opacity: 1;
  }
}

@keyframes flip {
  from {
    opacity: 0;
    transform: perspective(1000px) rotateX(-50deg);
    transform-origin: bottom;
  }

  to {
    transform: perspective(1000px) rotateX(0deg);
    opacity: 1;
    transform-origin: bottom;
  }
}